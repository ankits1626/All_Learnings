{"name": "test_all_reward_category_properly_displayed", "status": "failed", "statusDetails": {"message": "AssertionError: number of reward in UI i.e 1 == number of rewards in category i.e 0\nassert 0 == 1\n +  where 0 = len([])\n +  and   1 = len([<appium.webdriver.webelement.WebElement (session=\"2199df86-1b10-46d3-9dec-73c443092cc5\", element=\"B3000000-0000-0000-264B-010000000000\")>])", "trace": "setup = (<appium.webdriver.webdriver.WebDriver (session=\"2199df86-1b10-46d3-9dec-73c443092cc5\")>, <appium.webdriver.appium_service.AppiumService object at 0x11e78f200>)\nlog_test_name = <function log_test_name.<locals>.log_name at 0x11ea0f240>, api_client_with_token = <Datasource.APIClient.APIClient object at 0x109e6d640>\n\n    def test_all_reward_category_properly_displayed(setup, log_test_name, api_client_with_token):\n        driver, _ = setup\n        log_test_name()\n    \n        el1 = driver.find_element(AppiumBy.ACCESSIBILITY_ID, \"mainTabRewardz\")\n        el1.click()\n    \n        # verify category count\n        reward_categories = api_client_with_token.get_rewards_categories_data()\n        all_reward_category_rows = driver.find_elements(AppiumBy.ACCESSIBILITY_ID, \"rewardListingRewardCollectionCell\")\n        assert len(reward_categories) == len(all_reward_category_rows), \\\n            f\"number of rows in UI i.e {len(all_reward_category_rows)} == number of categories i.e {len(reward_categories)}\"\n    \n        # verify each row\n        for index, cell in enumerate(all_reward_category_rows):\n            label_text = cell.find_element(AppiumBy.ACCESSIBILITY_ID, \"rewardListingRewardCollectionTitle\").text\n            category_name = reward_categories[index].name\n            print(f'title = {label_text} --- category_name={category_name}')\n            assert label_text == category_name, f'title = {label_text} --- category_name={category_name} should be same'\n    \n            # verify reward in each row\n            rewards = reward_categories[index].rewards\n            reward_titles = cell.find_elements(AppiumBy.ACCESSIBILITY_ID, \"rewardCollectionRewardTitle\")\n>           assert len(rewards) == len(reward_titles), \\\n                f\"number of reward in UI i.e {len(reward_titles)} == number of rewards in category i.e {len(rewards)}\"\nE           AssertionError: number of reward in UI i.e 1 == number of rewards in category i.e 0\nE           assert 0 == 1\nE            +  where 0 = len([])\nE            +  and   1 = len([<appium.webdriver.webelement.WebElement (session=\"2199df86-1b10-46d3-9dec-73c443092cc5\", element=\"B3000000-0000-0000-264B-010000000000\")>])\n\nfirst/rewardz/test_rewardz.py:83: AssertionError"}, "attachments": [{"name": "log", "source": "b698373b-27ff-4055-855f-b95bd6b0dd3b-attachment.txt", "type": "text/plain"}], "start": 1711001124452, "stop": 1711001129239, "uuid": "d2c8a029-96bd-403b-8095-170d045f385e", "historyId": "6507d7ef854ad928ce7396b31310173e", "testCaseId": "6507d7ef854ad928ce7396b31310173e", "fullName": "first.rewardz.test_rewardz#test_all_reward_category_properly_displayed", "labels": [{"name": "parentSuite", "value": "first.rewardz"}, {"name": "suite", "value": "test_rewardz"}, {"name": "host", "value": "Ankits-MacBook-Pro.local"}, {"name": "thread", "value": "84639-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "first.rewardz.test_rewardz"}]}